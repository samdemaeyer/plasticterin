{"version":3,"sources":["components/NavBar.js","components/Footer.js","routes/VijfNaTwaalf.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","arguments","state","isOpen","className","this","id","src","alt","to","type","onClick","e","setState","React","Component","Footer","href","VijfNaTwaalf","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kTA8CeA,G,wDAzCb,aAAe,IAAD,8BACZ,eAASC,YACJC,MAAQ,CAAEC,QAAQ,GAFX,E,qDAKJ,IAAD,OACP,OACE,4BAAQC,UAAU,qBAChB,yBAAKA,UAAS,2CAAsCC,KAAKH,MAAMC,OAAS,UAAY,IAAMG,GAAG,WAC3F,yBAAKC,IAAI,gCAAgCC,IAAI,YAAYJ,UAAU,cACnE,wBAAIA,UAAU,aACZ,4BACE,kBAAC,IAAD,CAAMK,GAAG,IAAIL,UAAU,YAAvB,YAIF,4BACE,kBAAC,IAAD,CAAMK,GAAG,iBAAiBL,UAAU,YAApC,mBAIF,4BACE,kBAAC,IAAD,CAAMK,GAAG,WAAWL,UAAU,YAA9B,YAIF,4BACE,kBAAC,IAAD,CAAMK,GAAG,aAAaL,UAAU,YAAhC,eAKJ,4BAAQM,KAAK,SAASN,UAAU,cAAcO,QAAS,SAACC,GAAD,OAAO,EAAKC,SAAS,CAAEV,QAAS,EAAKD,MAAMC,WAChG,uBAAGC,UAAU,sB,GAlCJU,IAAMC,Y,MCDZ,SAASC,IACtB,OACE,4BAAQZ,UAAU,uBAAuBE,GAAG,UAC1C,yBAAKF,UAAU,2BACb,wBAAIA,UAAU,aACZ,4BAAI,uBAAGa,KAAK,gCAAR,0BACJ,sCAAW,uBAAGA,KAAK,KAAR,iBACX,mCAAQ,uBAAGA,KAAK,KAAR,oBCRH,SAASC,IACtB,OACE,oCACE,uCACA,wNACA,yJACA,0VACA,sXACA,0OCqBSC,MAzBf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,yBAAKf,UAAU,4BACb,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOgB,OAAK,EAACC,KAAK,KAChB,kBAACH,EAAD,OAEF,kBAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,kBAAlB,iBAGA,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,YAAlB,WAGA,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,cAAlB,eAKN,kBAAC,EAAD,QCdcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.9e4e1147.chunk.js","sourcesContent":["import React from 'react';\nimport './NavBar.scss';\nimport { Link } from \"react-router-dom\";\n\nclass NavBar extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = { isOpen: false };\n  }\n\n  render() {\n    return (\n      <header className=\"sticky sticky-top\">\n        <nav className={`container container-nav main-nav ${this.state.isOpen ? 'is-open' : ''}`} id=\"nav-bar\">\n          <img src=\"/plasticterin/header-logo.png\" alt=\"main-logo\" className=\"main-logo\" />\n          <ul className=\"nav-items\">\n            <li>\n              <Link to=\"/\" className=\"nav-item\">\n                5 na 12\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/plastic-terin\" className=\"nav-item\">\n              plastic(terin)\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/waanzin\" className=\"nav-item\">\n                waanzin\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/strijders\" className=\"nav-item\">\n                strijders\n              </Link>\n            </li>\n          </ul>\n          <button type=\"button\" className=\"menu-toggle\" onClick={(e) => this.setState({ isOpen: !this.state.isOpen })}>\n            <i className=\"fa fa-bars\"></i>\n          </button>\n        </nav>\n      </header>\n    );\n  }\n}\n\nexport default NavBar;\n","import React from 'react';\nimport './Footer.scss';\n\nexport default function Footer() {\n  return (\n    <footer className=\"sticky sticky-bottom\" id=\"footer\">\n      <nav className=\"container container-nav\">\n        <ul className=\"nav-items\">\n          <li><a href=\"mailto:info@plasticterin.com\">info@plasticterin.com</a></li>\n          <li>insta: <a href=\"#\">plasticterin</a></li>\n          <li>fb: <a href=\"#\">plasticterin</a></li>\n        </ul>\n      </nav>\n    </footer>\n  )\n}\n","import React from 'react';\n\nexport default function VijfNaTwaalf() {\n  return (\n    <>\n      <h2>5 na 12</h2>\n      <p>Het is 5 na 12. Of eigenlijk, het is al kwart na 12. We hebben genoeg gewacht. Steeds opnieuw wordt het plastic probleem aangekaart en steeds opnieuw gebeurt er te weinig. Plastic afval</p>\n      <p>is een probleem. Hoe we het ook draaien of keren: het ooit zo geweldige plastic heeft grootse gevolgen voor planeet aarde.</p>\n      <p>Hierbij nodigen wij iedereen uit om samen te wachten. Samen te wachten op een oplossing. Want dat is toch wat we eigenlijk allemaal doen? Uiter- aard zijn er tal van geweldige initiatieven zoals Mei plastic vrij en waren er reeds massaal protesten van zowel jong als oud. En toch. Toch veranderde er niet voldoende.</p>\n      <p>Wanneer mei voorbij is, minderen we wel met plastic, maar helemaal stop- pen is moeilijk. Dat geven we toe, wij kunnen het ook niet helemaal. Ook wij falen daarin. Maar er is meer voor nodig om ons niet genoeg te kunnen voorzien met alternatieven. Alle jongeren die op straat kwamen, voor wat? Voor niets? Het mag niet voor niets zijn geweest!</p>\n      <p>Daarom is het tijd voor verandering. Gedaan met het wachten, gedaan met het wachten op een oplossing. Het is tijd. Nu. Want het is al 5 na 12. Wij wil- len verandering en wel NU. Voordat het te laat is.</p>\n    </>\n  );\n}\n","import React from 'react';\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport NavBar from './components/NavBar';\nimport Footer from './components/Footer';\nimport VijfNaTwaalf from './routes/VijfNaTwaalf';\n\nfunction App() {\n  return (\n    <HashRouter>\n      <NavBar />\n      <div className=\"container container-main\">\n        <Switch>\n            <Route exact path=\"/\">\n              <VijfNaTwaalf />\n            </Route>\n            <Route exact path=\"/plastic-terin\">\n              plastic-terin\n            </Route>\n            <Route exact path=\"/waanzin\">\n              waanzin\n            </Route>\n            <Route exact path=\"/strijders\">\n              strijders\n            </Route>\n        </Switch>\n      </div>\n      <Footer />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}